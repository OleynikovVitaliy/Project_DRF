version: '3'

services:
  db:
    image: postgres
    restart: on-failure
    expose:
      - "5432"
    env_file:
      - .env
    volumes:
      - ./postgres_data:/var/lib/postgresql/data/
    healthcheck:
      test: [ "CMD-SHELL", "-c", "pg_isready -U $POSTGRES_USER"]
      interval: 10s
      timeout: 5s
      retries: 5


  redis:
    image: redis
    restart: on-failure
    expose:
      - "6379"
    env_file:
      - .env


  app:
    build: .
    tty: true
    restart: on-failure
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    ports:
      - '8000:8000'
    volumes:
      - .:/drf
    command: sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"


  celery:
    build: .
    tty: true
    restart: on-failure
    env_file:
      - .env
    depends_on:
      - redis
      - app
      - db
    command: celery -A config worker -l INFO -P eventlet


  celery_beat:
    build: .
    tty: true
    restart: on-failure
    env_file:
      - .env
    depends_on:
      - redis
      - app
      - db
    command: celery -A config beat -l INFO -S django


volumes:
  pg_data:
